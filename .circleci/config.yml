defaults: &server
  working_directory: ~/pig-book
  docker:
    - image: circleci/ruby:2.6.5-node-browsers
      environment:
        RAILS_ENV: test
        DATABASE_URL: postgres://postgres:password@localhost:5432/pig_book_test
        DB_PASS: password
        DB_USER: postgres
        DB_HOST: localhost
        REDIS_HOST: redis
        TZ: Asia/Tokyo
    - image: postgres:10.4-alpine
      environment:
        POSTGRES_PASSWORD: ""
        POSTGRES_DB: pig_book_test
    - image: redis:4.0.9-alpine
  steps:
    - checkout

    - type: cache-restore
      key: pig_book-{{ checksum "server/Gemfile.lock" }}

    - run:
        name: Update bundler
        command: gem update bundler
        working_directory: server

    - run:
        name: Bundle install
        command: bundle install --path vendor/bundle --clean
        working_directory: server

    - type: cache-save
      key: pig_book-{{ checksum "server/Gemfile.lock" }}
      paths:
        - vendor/bundle

    - run:
        name: Create Database
        working_directory: server
        command: bundle exec rake db:create
    - run:
        name: Load Database Schema
        working_directory: server
        command: bundle exec rake db:schema:load

    # Run rubocop
    - run:
        name: Run Rubocop
        working_directory: server
        command: bundle exec rubocop

    # Run precompile
    #- run:
    #    name: precompile
    #    working_directory: server
    #    command: bundle exec rake assets:precompile

    # Run rspec in parallel
    - type: shell
      working_directory: server
      command: |
        bundle exec rspec \
          --format RspecJunitFormatter \
          --out /tmp/test-results/rspec.xml \
          --format progress \
          $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

    # Export Report of test coverage
    # - run: ruby ./bin/coverage_report.rb

    # Save artifacts
    - store_artifacts:
        path: ./tmp/capybara
        destination: capybara-screenshot

    #- store_artifacts:
    #    path: ./coverage
    #    destination: coverage

    #- store_test_results:
    #    path: /tmp/test-results

defaults: &client
  working_directory: ~/pig-book
  docker:
    - image: circleci/ruby:2.6.5-node-browsers
      environment:
        RAILS_ENV: test
        NODE_ENV: test
        DATABASE_URL: postgres://postgres:password@localhost:5432/pig_book_test
        DB_PASS: password
        DB_USER: postgres
        DB_HOST: localhost
        REDIS_HOST: redis
        TZ: Asia/Tokyo
  steps:
    - checkout

    # Upgrade npm
    #- run: npm install npm@latest

    #- restore_cache:
    #    name: Restore npm cache
    #    keys: npm-5.4.2-{{ checksum "client/package.json" }}

    - run:
        name: Run yarn install
        working_directory: client
        command: yarn install

    #- save_cache:
    #    name: Store npm cache
    #    key: npm-5.4.2-{{ checksum "client/package.json" }}

    - run:
        name: Run sass-lint
        working_directory: client
        command: yarn run sass-lint

    - run:
        name: Run ESLint
        working_directory: client
        command: yarn run eslint

version: 2
jobs:
  build_on_server:
    <<: *server
  build_on_client:
    <<: *client

workflows:
  version: 2
  main:
    jobs:
      - build_on_server
      - build_on_client
